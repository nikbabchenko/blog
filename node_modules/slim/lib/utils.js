'use strict';

/**
 * Объект методов-утилит.
 */

var utils = module.exports = {
	/**
	 * Возвращает массив имен агрументов переданной функции.
	 * @param f функция.
	 * @return array
	 */

	functionArgs: function (f) {
		var body = f.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg, '');
		return body.slice(body.indexOf('(') + 1, body.indexOf(')')).match(/([^\s,]+)/g) || [];
	},

	/**
	 * Создает объект ошибки и возвращает его.
	 * @param message сообщение об ошибке.
	 * @param code код статуса (по умолчанию 500).
	 * @return Error
	 */

	error: function (message, code) {
		var error = new Error(message);
		error.status = code || 500;
		return error;
	},

	/**
	 * Объединяет свойства переданных объектов в новом объекте и возвращает его.
	 * @param objects массив объектов.
	 * @return object
	 */

	merge: function (objects) {
		var object = {};
		objects.forEach(function (o) {
			for (var property in o)
				object[property] = o[property];
		});
		return object;
	},

	/**
	 * Функция, которая ничего не делает.
	 */

	noop: function () {
	},
};
